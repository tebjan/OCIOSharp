// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#include "OpenColorTransforms.h"
#include "OpenColorTypes.h"

using namespace System;
using namespace System::Runtime::InteropServices;

OpenColorIO::OpenColorIO_v2_4::FormatMetadata::FormatMetadata(class ::OpenColorIO_v2_4::FormatMetadata* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::FormatMetadata::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata::FormatMetadata(class ::OpenColorIO_v2_4::FormatMetadata* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::FormatMetadata::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata::~FormatMetadata()
{
    delete NativePtr;
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::FormatMetadata::GetAttributeName(int i)
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->getAttributeName(i);
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::FormatMetadata::GetAttributeValue(int i)
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->getAttributeValue(i);
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::FormatMetadata::GetAttributeValue(::System::String^ name)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(name);
    auto __arg0 = ___arg0.c_str();
    auto ___ret = ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->getAttributeValue(__arg0);
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::FormatMetadata::AddAttribute(::System::String^ name, ::System::String^ value)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(name);
    auto __arg0 = ___arg0.c_str();
    auto ___arg1 = clix::marshalString<clix::E_UTF8>(value);
    auto __arg1 = ___arg1.c_str();
    ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->addAttribute(__arg0, __arg1);
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::FormatMetadata::GetChildElement(int i)
{
    auto &___ret = ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->getChildElement(i);
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

void OpenColorIO::OpenColorIO_v2_4::FormatMetadata::AddChildElement(::System::String^ name, ::System::String^ value)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(name);
    auto __arg0 = ___arg0.c_str();
    auto ___arg1 = clix::marshalString<clix::E_UTF8>(value);
    auto __arg1 = ___arg1.c_str();
    ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->addChildElement(__arg0, __arg1);
}

void OpenColorIO::OpenColorIO_v2_4::FormatMetadata::Clear()
{
    ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->clear();
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::FormatMetadata::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::FormatMetadata::__Instance::set(::System::IntPtr object)
{
    NativePtr = (class ::OpenColorIO_v2_4::FormatMetadata*)object.ToPointer();
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::FormatMetadata::ElementName::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->getElementName();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::FormatMetadata::ElementName::set(::System::String^ _0)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(_0);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->setElementName(__arg0);
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::FormatMetadata::ElementValue::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->getElementValue();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::FormatMetadata::ElementValue::set(::System::String^ _0)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(_0);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->setElementValue(__arg0);
}

int OpenColorIO::OpenColorIO_v2_4::FormatMetadata::NumAttributes::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->getNumAttributes();
    return ___ret;
}

int OpenColorIO::OpenColorIO_v2_4::FormatMetadata::NumChildrenElements::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->getNumChildrenElements();
    return ___ret;
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::FormatMetadata::Name::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->getName();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::FormatMetadata::Name::set(::System::String^ name)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(name);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->setName(__arg0);
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::FormatMetadata::ID::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->getID();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::FormatMetadata::ID::set(::System::String^ id)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(id);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::FormatMetadata*)NativePtr)->setID(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::Transform::Transform(class ::OpenColorIO_v2_4::Transform* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::Transform^ OpenColorIO::OpenColorIO_v2_4::Transform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::Transform((class ::OpenColorIO_v2_4::Transform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::Transform::Transform(class ::OpenColorIO_v2_4::Transform* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::Transform^ OpenColorIO::OpenColorIO_v2_4::Transform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::Transform((class ::OpenColorIO_v2_4::Transform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::Transform::~Transform()
{
    delete NativePtr;
}

void OpenColorIO::OpenColorIO_v2_4::Transform::Validate()
{
    ((class ::OpenColorIO_v2_4::Transform*)NativePtr)->validate();
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::Transform::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::Transform::__Instance::set(::System::IntPtr object)
{
    NativePtr = (class ::OpenColorIO_v2_4::Transform*)object.ToPointer();
}

OpenColorIO::OpenColorIO_v2_4::TransformDirection OpenColorIO::OpenColorIO_v2_4::Transform::Direction::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::Transform*)NativePtr)->getDirection();
    return (OpenColorIO::OpenColorIO_v2_4::TransformDirection)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::Transform::Direction::set(OpenColorIO::OpenColorIO_v2_4::TransformDirection dir)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::TransformDirection)dir;
    ((class ::OpenColorIO_v2_4::Transform*)NativePtr)->setDirection(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::Transform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::Transform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::AllocationTransform::AllocationTransform(class ::OpenColorIO_v2_4::AllocationTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::AllocationTransform^ OpenColorIO::OpenColorIO_v2_4::AllocationTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::AllocationTransform((class ::OpenColorIO_v2_4::AllocationTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::AllocationTransform::AllocationTransform(class ::OpenColorIO_v2_4::AllocationTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::AllocationTransform^ OpenColorIO::OpenColorIO_v2_4::AllocationTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::AllocationTransform((class ::OpenColorIO_v2_4::AllocationTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::AllocationTransform::~AllocationTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::AllocationTransform*) __nativePtr;
    }
}

void OpenColorIO::OpenColorIO_v2_4::AllocationTransform::Validate()
{
    ((class ::OpenColorIO_v2_4::AllocationTransform*)NativePtr)->validate();
}

void OpenColorIO::OpenColorIO_v2_4::AllocationTransform::GetVars([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] float% vars)
{
    float __arg0 = vars;
    ((class ::OpenColorIO_v2_4::AllocationTransform*)NativePtr)->getVars(&__arg0);
    vars = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::AllocationTransform::SetVars(int numvars, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] float% vars)
{
    float __arg1 = vars;
    ((class ::OpenColorIO_v2_4::AllocationTransform*)NativePtr)->setVars(numvars, &__arg1);
    vars = __arg1;
}

OpenColorIO::OpenColorIO_v2_4::TransformDirection OpenColorIO::OpenColorIO_v2_4::AllocationTransform::Direction::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::AllocationTransform*)NativePtr)->getDirection();
    return (OpenColorIO::OpenColorIO_v2_4::TransformDirection)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::AllocationTransform::Direction::set(OpenColorIO::OpenColorIO_v2_4::TransformDirection dir)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::TransformDirection)dir;
    ((class ::OpenColorIO_v2_4::AllocationTransform*)NativePtr)->setDirection(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::AllocationTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::AllocationTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::Allocation OpenColorIO::OpenColorIO_v2_4::AllocationTransform::Allocation::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::AllocationTransform*)NativePtr)->getAllocation();
    return (OpenColorIO::OpenColorIO_v2_4::Allocation)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::AllocationTransform::Allocation::set(OpenColorIO::OpenColorIO_v2_4::Allocation allocation)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::Allocation)allocation;
    ((class ::OpenColorIO_v2_4::AllocationTransform*)NativePtr)->setAllocation(__arg0);
}

int OpenColorIO::OpenColorIO_v2_4::AllocationTransform::NumVars::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::AllocationTransform*)NativePtr)->getNumVars();
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::BuiltinTransform::BuiltinTransform(class ::OpenColorIO_v2_4::BuiltinTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::BuiltinTransform^ OpenColorIO::OpenColorIO_v2_4::BuiltinTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::BuiltinTransform((class ::OpenColorIO_v2_4::BuiltinTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::BuiltinTransform::BuiltinTransform(class ::OpenColorIO_v2_4::BuiltinTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::BuiltinTransform^ OpenColorIO::OpenColorIO_v2_4::BuiltinTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::BuiltinTransform((class ::OpenColorIO_v2_4::BuiltinTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::BuiltinTransform::~BuiltinTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::BuiltinTransform*) __nativePtr;
    }
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::BuiltinTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::BuiltinTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::BuiltinTransform::Style::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::BuiltinTransform*)NativePtr)->getStyle();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::BuiltinTransform::Style::set(::System::String^ style)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(style);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::BuiltinTransform*)NativePtr)->setStyle(__arg0);
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::BuiltinTransform::Description::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::BuiltinTransform*)NativePtr)->getDescription();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

OpenColorIO::OpenColorIO_v2_4::CDLTransform::CDLTransform(class ::OpenColorIO_v2_4::CDLTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::CDLTransform^ OpenColorIO::OpenColorIO_v2_4::CDLTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::CDLTransform((class ::OpenColorIO_v2_4::CDLTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::CDLTransform::CDLTransform(class ::OpenColorIO_v2_4::CDLTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::CDLTransform^ OpenColorIO::OpenColorIO_v2_4::CDLTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::CDLTransform((class ::OpenColorIO_v2_4::CDLTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::CDLTransform::~CDLTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::CDLTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::CDLTransform::Equals(OpenColorIO::OpenColorIO_v2_4::CDLTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::CDLTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::CDLTransform::GetSlope([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% rgb)
{
    double __arg0 = rgb;
    ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->getSlope(&__arg0);
    rgb = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::CDLTransform::SetSlope([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% rgb)
{
    double __arg0 = rgb;
    ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->setSlope(&__arg0);
    rgb = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::CDLTransform::GetOffset([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% rgb)
{
    double __arg0 = rgb;
    ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->getOffset(&__arg0);
    rgb = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::CDLTransform::SetOffset([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% rgb)
{
    double __arg0 = rgb;
    ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->setOffset(&__arg0);
    rgb = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::CDLTransform::GetPower([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% rgb)
{
    double __arg0 = rgb;
    ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->getPower(&__arg0);
    rgb = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::CDLTransform::SetPower([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% rgb)
{
    double __arg0 = rgb;
    ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->setPower(&__arg0);
    rgb = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::CDLTransform::GetSOP([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% vec9)
{
    double __arg0 = vec9;
    ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->getSOP(&__arg0);
    vec9 = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::CDLTransform::SetSOP([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% vec9)
{
    double __arg0 = vec9;
    ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->setSOP(&__arg0);
    vec9 = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::CDLTransform::GetSatLumaCoefs([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% rgb)
{
    double __arg0 = rgb;
    ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->getSatLumaCoefs(&__arg0);
    rgb = __arg0;
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::CDLTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::CDLTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

OpenColorIO::OpenColorIO_v2_4::CDLStyle OpenColorIO::OpenColorIO_v2_4::CDLTransform::Style::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->getStyle();
    return (OpenColorIO::OpenColorIO_v2_4::CDLStyle)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::CDLTransform::Style::set(OpenColorIO::OpenColorIO_v2_4::CDLStyle style)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::CDLStyle)style;
    ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->setStyle(__arg0);
}

double OpenColorIO::OpenColorIO_v2_4::CDLTransform::Sat::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->getSat();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::CDLTransform::Sat::set(double sat)
{
    ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->setSat(sat);
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::CDLTransform::ID::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->getID();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::CDLTransform::ID::set(::System::String^ id)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(id);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->setID(__arg0);
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::CDLTransform::FirstSOPDescription::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->getFirstSOPDescription();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::CDLTransform::FirstSOPDescription::set(::System::String^ description)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(description);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::CDLTransform*)NativePtr)->setFirstSOPDescription(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::ColorSpaceTransform(class ::OpenColorIO_v2_4::ColorSpaceTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform^ OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform((class ::OpenColorIO_v2_4::ColorSpaceTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::ColorSpaceTransform(class ::OpenColorIO_v2_4::ColorSpaceTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform^ OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform((class ::OpenColorIO_v2_4::ColorSpaceTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::~ColorSpaceTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::ColorSpaceTransform*) __nativePtr;
    }
}

void OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::Validate()
{
    ((class ::OpenColorIO_v2_4::ColorSpaceTransform*)NativePtr)->validate();
}

OpenColorIO::OpenColorIO_v2_4::TransformDirection OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::Direction::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ColorSpaceTransform*)NativePtr)->getDirection();
    return (OpenColorIO::OpenColorIO_v2_4::TransformDirection)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::Direction::set(OpenColorIO::OpenColorIO_v2_4::TransformDirection dir)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::TransformDirection)dir;
    ((class ::OpenColorIO_v2_4::ColorSpaceTransform*)NativePtr)->setDirection(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ColorSpaceTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::Src::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ColorSpaceTransform*)NativePtr)->getSrc();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::Src::set(::System::String^ src)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(src);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::ColorSpaceTransform*)NativePtr)->setSrc(__arg0);
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::Dst::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ColorSpaceTransform*)NativePtr)->getDst();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::Dst::set(::System::String^ dst)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(dst);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::ColorSpaceTransform*)NativePtr)->setDst(__arg0);
}

bool OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::DataBypass::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ColorSpaceTransform*)NativePtr)->getDataBypass();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ColorSpaceTransform::DataBypass::set(bool enabled)
{
    ((class ::OpenColorIO_v2_4::ColorSpaceTransform*)NativePtr)->setDataBypass(enabled);
}

OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::DisplayViewTransform(class ::OpenColorIO_v2_4::DisplayViewTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform^ OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform((class ::OpenColorIO_v2_4::DisplayViewTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::DisplayViewTransform(class ::OpenColorIO_v2_4::DisplayViewTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform^ OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform((class ::OpenColorIO_v2_4::DisplayViewTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::~DisplayViewTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::DisplayViewTransform*) __nativePtr;
    }
}

void OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::Validate()
{
    ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->validate();
}

OpenColorIO::OpenColorIO_v2_4::TransformDirection OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::Direction::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->getDirection();
    return (OpenColorIO::OpenColorIO_v2_4::TransformDirection)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::Direction::set(OpenColorIO::OpenColorIO_v2_4::TransformDirection dir)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::TransformDirection)dir;
    ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->setDirection(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::Src::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->getSrc();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::Src::set(::System::String^ name)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(name);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->setSrc(__arg0);
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::Display::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->getDisplay();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::Display::set(::System::String^ display)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(display);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->setDisplay(__arg0);
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::View::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->getView();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::View::set(::System::String^ view)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(view);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->setView(__arg0);
}

bool OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::LooksBypass::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->getLooksBypass();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::LooksBypass::set(bool bypass)
{
    ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->setLooksBypass(bypass);
}

bool OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::DataBypass::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->getDataBypass();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::DisplayViewTransform::DataBypass::set(bool bypass)
{
    ((class ::OpenColorIO_v2_4::DisplayViewTransform*)NativePtr)->setDataBypass(bypass);
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM::GradingRGBM(struct ::OpenColorIO_v2_4::GradingRGBM* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ OpenColorIO::OpenColorIO_v2_4::GradingRGBM::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBM((struct ::OpenColorIO_v2_4::GradingRGBM*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM::GradingRGBM(struct ::OpenColorIO_v2_4::GradingRGBM* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ OpenColorIO::OpenColorIO_v2_4::GradingRGBM::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBM((struct ::OpenColorIO_v2_4::GradingRGBM*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM::~GradingRGBM()
{
    delete NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM::GradingRGBM()
{
    __ownsNativeInstance = true;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingRGBM();
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM::GradingRGBM(double red, double green, double blue, double master)
{
    __ownsNativeInstance = true;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingRGBM(red, green, blue, master);
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM::GradingRGBM(cli::array<double>^ rgbm)
{
    __ownsNativeInstance = true;
    double __0ArrayPtr[4];
    if (rgbm != nullptr)
    {
        if (rgbm->Length != 4)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 4; i++)
            __0ArrayPtr[i] = rgbm[i];
    }
    auto __arg0 = __0ArrayPtr;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingRGBM(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM::GradingRGBM(OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ _0)
{
    __ownsNativeInstance = true;
    if (ReferenceEquals(_0, nullptr))
        throw gcnew ::System::ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingRGBM*)_0->NativePtr;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingRGBM(__arg0);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBM::operator==(OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return lhsNull && rhsNull;
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingRGBM*)lhs->NativePtr;
    auto &__arg1 = *(struct ::OpenColorIO_v2_4::GradingRGBM*)rhs->NativePtr;
    auto ___ret = __arg0 == __arg1;
    return ___ret;
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBM::Equals(::System::Object^ obj)
{
    return this == safe_cast<OpenColorIO::OpenColorIO_v2_4::GradingRGBM^>(obj);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBM::operator!=(OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return !(lhsNull && rhsNull);
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingRGBM*)lhs->NativePtr;
    auto &__arg1 = *(struct ::OpenColorIO_v2_4::GradingRGBM*)rhs->NativePtr;
    auto ___ret = __arg0 != __arg1;
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM::operator OpenColorIO::OpenColorIO_v2_4::GradingRGBM^(cli::array<double>^ rgbm)
{
    double __0ArrayPtr[4];
    if (rgbm != nullptr)
    {
        if (rgbm->Length != 4)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 4; i++)
            __0ArrayPtr[i] = rgbm[i];
    }
    auto __arg0 = __0ArrayPtr;
    auto ___ret = (::OpenColorIO_v2_4::GradingRGBM) __arg0;
    auto _____ret = new struct ::OpenColorIO_v2_4::GradingRGBM(___ret);
    return (_____ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBM((struct ::OpenColorIO_v2_4::GradingRGBM*)_____ret, true);
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::GradingRGBM::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBM::__Instance::set(::System::IntPtr object)
{
    NativePtr = (struct ::OpenColorIO_v2_4::GradingRGBM*)object.ToPointer();
}

double OpenColorIO::OpenColorIO_v2_4::GradingRGBM::MRed::get()
{
    return NativePtr->m_red;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBM::MRed::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingRGBM*)NativePtr)->m_red = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingRGBM::MGreen::get()
{
    return NativePtr->m_green;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBM::MGreen::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingRGBM*)NativePtr)->m_green = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingRGBM::MBlue::get()
{
    return NativePtr->m_blue;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBM::MBlue::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingRGBM*)NativePtr)->m_blue = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingRGBM::MMaster::get()
{
    return NativePtr->m_master;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBM::MMaster::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingRGBM*)NativePtr)->m_master = value;
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimary::GradingPrimary(struct ::OpenColorIO_v2_4::GradingPrimary* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimary^ OpenColorIO::OpenColorIO_v2_4::GradingPrimary::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingPrimary((struct ::OpenColorIO_v2_4::GradingPrimary*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimary::GradingPrimary(struct ::OpenColorIO_v2_4::GradingPrimary* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimary^ OpenColorIO::OpenColorIO_v2_4::GradingPrimary::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingPrimary((struct ::OpenColorIO_v2_4::GradingPrimary*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimary::~GradingPrimary()
{
    delete NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimary::GradingPrimary()
{
    __ownsNativeInstance = true;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingPrimary();
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimary::GradingPrimary(OpenColorIO::OpenColorIO_v2_4::GradingStyle style)
{
    __ownsNativeInstance = true;
    auto __arg0 = (enum ::OpenColorIO_v2_4::GradingStyle)style;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingPrimary(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::Validate(OpenColorIO::OpenColorIO_v2_4::GradingStyle style)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::GradingStyle)style;
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->validate(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimary::GradingPrimary(OpenColorIO::OpenColorIO_v2_4::GradingPrimary^ _0)
{
    __ownsNativeInstance = true;
    if (ReferenceEquals(_0, nullptr))
        throw gcnew ::System::ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingPrimary*)_0->NativePtr;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingPrimary(__arg0);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingPrimary::operator==(OpenColorIO::OpenColorIO_v2_4::GradingPrimary^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingPrimary^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return lhsNull && rhsNull;
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingPrimary*)lhs->NativePtr;
    auto &__arg1 = *(struct ::OpenColorIO_v2_4::GradingPrimary*)rhs->NativePtr;
    auto ___ret = __arg0 == __arg1;
    return ___ret;
}

bool OpenColorIO::OpenColorIO_v2_4::GradingPrimary::Equals(::System::Object^ obj)
{
    return this == safe_cast<OpenColorIO::OpenColorIO_v2_4::GradingPrimary^>(obj);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingPrimary::operator!=(OpenColorIO::OpenColorIO_v2_4::GradingPrimary^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingPrimary^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return !(lhsNull && rhsNull);
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingPrimary*)lhs->NativePtr;
    auto &__arg1 = *(struct ::OpenColorIO_v2_4::GradingPrimary*)rhs->NativePtr;
    auto ___ret = __arg0 != __arg1;
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimary::operator OpenColorIO::OpenColorIO_v2_4::GradingPrimary^(OpenColorIO::OpenColorIO_v2_4::GradingStyle style)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::GradingStyle)style;
    auto ___ret = (::OpenColorIO_v2_4::GradingPrimary) __arg0;
    auto _____ret = new struct ::OpenColorIO_v2_4::GradingPrimary(___ret);
    return (_____ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingPrimary((struct ::OpenColorIO_v2_4::GradingPrimary*)_____ret, true);
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::GradingPrimary::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::__Instance::set(::System::IntPtr object)
{
    NativePtr = (struct ::OpenColorIO_v2_4::GradingPrimary*)object.ToPointer();
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MBrightness::get()
{
    return (&NativePtr->m_brightness == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBM((struct ::OpenColorIO_v2_4::GradingRGBM*)&NativePtr->m_brightness);
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MBrightness::set(OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is passed by value.");
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->m_brightness = *(struct ::OpenColorIO_v2_4::GradingRGBM*)value->NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MContrast::get()
{
    return (&NativePtr->m_contrast == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBM((struct ::OpenColorIO_v2_4::GradingRGBM*)&NativePtr->m_contrast);
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MContrast::set(OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is passed by value.");
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->m_contrast = *(struct ::OpenColorIO_v2_4::GradingRGBM*)value->NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MGamma::get()
{
    return (&NativePtr->m_gamma == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBM((struct ::OpenColorIO_v2_4::GradingRGBM*)&NativePtr->m_gamma);
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MGamma::set(OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is passed by value.");
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->m_gamma = *(struct ::OpenColorIO_v2_4::GradingRGBM*)value->NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MOffset::get()
{
    return (&NativePtr->m_offset == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBM((struct ::OpenColorIO_v2_4::GradingRGBM*)&NativePtr->m_offset);
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MOffset::set(OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is passed by value.");
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->m_offset = *(struct ::OpenColorIO_v2_4::GradingRGBM*)value->NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MExposure::get()
{
    return (&NativePtr->m_exposure == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBM((struct ::OpenColorIO_v2_4::GradingRGBM*)&NativePtr->m_exposure);
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MExposure::set(OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is passed by value.");
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->m_exposure = *(struct ::OpenColorIO_v2_4::GradingRGBM*)value->NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MLift::get()
{
    return (&NativePtr->m_lift == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBM((struct ::OpenColorIO_v2_4::GradingRGBM*)&NativePtr->m_lift);
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MLift::set(OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is passed by value.");
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->m_lift = *(struct ::OpenColorIO_v2_4::GradingRGBM*)value->NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MGain::get()
{
    return (&NativePtr->m_gain == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBM((struct ::OpenColorIO_v2_4::GradingRGBM*)&NativePtr->m_gain);
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MGain::set(OpenColorIO::OpenColorIO_v2_4::GradingRGBM^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is passed by value.");
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->m_gain = *(struct ::OpenColorIO_v2_4::GradingRGBM*)value->NativePtr;
}

double OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MSaturation::get()
{
    return NativePtr->m_saturation;
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MSaturation::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->m_saturation = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MPivot::get()
{
    return NativePtr->m_pivot;
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MPivot::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->m_pivot = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MPivotBlack::get()
{
    return NativePtr->m_pivotBlack;
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MPivotBlack::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->m_pivotBlack = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MPivotWhite::get()
{
    return NativePtr->m_pivotWhite;
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MPivotWhite::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->m_pivotWhite = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MClampBlack::get()
{
    return NativePtr->m_clampBlack;
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MClampBlack::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->m_clampBlack = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MClampWhite::get()
{
    return NativePtr->m_clampWhite;
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimary::MClampWhite::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingPrimary*)NativePtr)->m_clampWhite = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingPrimary::NoClampBlack::get()
{
    auto ___ret = ::OpenColorIO_v2_4::GradingPrimary::NoClampBlack();
    return ___ret;
}

double OpenColorIO::OpenColorIO_v2_4::GradingPrimary::NoClampWhite::get()
{
    auto ___ret = ::OpenColorIO_v2_4::GradingPrimary::NoClampWhite();
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::GradingControlPoint(struct ::OpenColorIO_v2_4::GradingControlPoint* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingControlPoint^ OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingControlPoint((struct ::OpenColorIO_v2_4::GradingControlPoint*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::GradingControlPoint(struct ::OpenColorIO_v2_4::GradingControlPoint* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingControlPoint^ OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingControlPoint((struct ::OpenColorIO_v2_4::GradingControlPoint*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::~GradingControlPoint()
{
    delete NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::GradingControlPoint()
{
    __ownsNativeInstance = true;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingControlPoint();
}

OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::GradingControlPoint(float x, float y)
{
    __ownsNativeInstance = true;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingControlPoint(x, y);
}

OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::GradingControlPoint(OpenColorIO::OpenColorIO_v2_4::GradingControlPoint^ _0)
{
    __ownsNativeInstance = true;
    if (ReferenceEquals(_0, nullptr))
        throw gcnew ::System::ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingControlPoint*)_0->NativePtr;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingControlPoint(__arg0);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::operator==(OpenColorIO::OpenColorIO_v2_4::GradingControlPoint^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingControlPoint^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return lhsNull && rhsNull;
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingControlPoint*)lhs->NativePtr;
    auto &__arg1 = *(struct ::OpenColorIO_v2_4::GradingControlPoint*)rhs->NativePtr;
    auto ___ret = __arg0 == __arg1;
    return ___ret;
}

bool OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::Equals(::System::Object^ obj)
{
    return this == safe_cast<OpenColorIO::OpenColorIO_v2_4::GradingControlPoint^>(obj);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::operator!=(OpenColorIO::OpenColorIO_v2_4::GradingControlPoint^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingControlPoint^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return !(lhsNull && rhsNull);
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingControlPoint*)lhs->NativePtr;
    auto &__arg1 = *(struct ::OpenColorIO_v2_4::GradingControlPoint*)rhs->NativePtr;
    auto ___ret = __arg0 != __arg1;
    return ___ret;
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::__Instance::set(::System::IntPtr object)
{
    NativePtr = (struct ::OpenColorIO_v2_4::GradingControlPoint*)object.ToPointer();
}

float OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::MX::get()
{
    return NativePtr->m_x;
}

void OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::MX::set(float value)
{
    ((struct ::OpenColorIO_v2_4::GradingControlPoint*)NativePtr)->m_x = value;
}

float OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::MY::get()
{
    return NativePtr->m_y;
}

void OpenColorIO::OpenColorIO_v2_4::GradingControlPoint::MY::set(float value)
{
    ((struct ::OpenColorIO_v2_4::GradingControlPoint*)NativePtr)->m_y = value;
}

OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::GradingBSplineCurve(class ::OpenColorIO_v2_4::GradingBSplineCurve* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve^ OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve((class ::OpenColorIO_v2_4::GradingBSplineCurve*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::GradingBSplineCurve(class ::OpenColorIO_v2_4::GradingBSplineCurve* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve^ OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve((class ::OpenColorIO_v2_4::GradingBSplineCurve*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::~GradingBSplineCurve()
{
    delete NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingControlPoint^ OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::GetControlPoint(unsigned long long index)
{
    auto __arg0 = index;
    auto &___ret = ((class ::OpenColorIO_v2_4::GradingBSplineCurve*)NativePtr)->getControlPoint(__arg0);
    return (OpenColorIO::OpenColorIO_v2_4::GradingControlPoint^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingControlPoint((struct ::OpenColorIO_v2_4::GradingControlPoint*)&___ret));
}

float OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::GetSlope(unsigned long long index)
{
    auto __arg0 = index;
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingBSplineCurve*)NativePtr)->getSlope(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::SetSlope(unsigned long long index, float slope)
{
    auto __arg0 = index;
    ((class ::OpenColorIO_v2_4::GradingBSplineCurve*)NativePtr)->setSlope(__arg0, slope);
}

void OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::Validate()
{
    ((class ::OpenColorIO_v2_4::GradingBSplineCurve*)NativePtr)->validate();
}

bool OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::operator==(OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return lhsNull && rhsNull;
    auto &__arg0 = *(class ::OpenColorIO_v2_4::GradingBSplineCurve*)lhs->NativePtr;
    auto &__arg1 = *(class ::OpenColorIO_v2_4::GradingBSplineCurve*)rhs->NativePtr;
    auto ___ret = __arg0 == __arg1;
    return ___ret;
}

bool OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::Equals(::System::Object^ obj)
{
    return this == safe_cast<OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve^>(obj);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::operator!=(OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return !(lhsNull && rhsNull);
    auto &__arg0 = *(class ::OpenColorIO_v2_4::GradingBSplineCurve*)lhs->NativePtr;
    auto &__arg1 = *(class ::OpenColorIO_v2_4::GradingBSplineCurve*)rhs->NativePtr;
    auto ___ret = __arg0 != __arg1;
    return ___ret;
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::__Instance::set(::System::IntPtr object)
{
    NativePtr = (class ::OpenColorIO_v2_4::GradingBSplineCurve*)object.ToPointer();
}

unsigned long long OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::NumControlPoints::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingBSplineCurve*)NativePtr)->getNumControlPoints();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::NumControlPoints::set(unsigned long long size)
{
    auto __arg0 = size;
    ((class ::OpenColorIO_v2_4::GradingBSplineCurve*)NativePtr)->setNumControlPoints(__arg0);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingBSplineCurve::SlopesAreDefault::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingBSplineCurve*)NativePtr)->slopesAreDefault();
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve::GradingRGBCurve(class ::OpenColorIO_v2_4::GradingRGBCurve* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve^ OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve((class ::OpenColorIO_v2_4::GradingRGBCurve*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve::GradingRGBCurve(class ::OpenColorIO_v2_4::GradingRGBCurve* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve^ OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve((class ::OpenColorIO_v2_4::GradingRGBCurve*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve::~GradingRGBCurve()
{
    delete NativePtr;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve::Validate()
{
    ((class ::OpenColorIO_v2_4::GradingRGBCurve*)NativePtr)->validate();
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve::GradingRGBCurve(OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve^ _0)
{
    __ownsNativeInstance = true;
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve::operator==(OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return lhsNull && rhsNull;
    auto &__arg0 = *(class ::OpenColorIO_v2_4::GradingRGBCurve*)lhs->NativePtr;
    auto &__arg1 = *(class ::OpenColorIO_v2_4::GradingRGBCurve*)rhs->NativePtr;
    auto ___ret = __arg0 == __arg1;
    return ___ret;
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve::Equals(::System::Object^ obj)
{
    return this == safe_cast<OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve^>(obj);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve::operator!=(OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return !(lhsNull && rhsNull);
    auto &__arg0 = *(class ::OpenColorIO_v2_4::GradingRGBCurve*)lhs->NativePtr;
    auto &__arg1 = *(class ::OpenColorIO_v2_4::GradingRGBCurve*)rhs->NativePtr;
    auto ___ret = __arg0 != __arg1;
    return ___ret;
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve::__Instance::set(::System::IntPtr object)
{
    NativePtr = (class ::OpenColorIO_v2_4::GradingRGBCurve*)object.ToPointer();
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBCurve::IsIdentity::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingRGBCurve*)NativePtr)->isIdentity();
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::GradingRGBMSW(struct ::OpenColorIO_v2_4::GradingRGBMSW* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW((struct ::OpenColorIO_v2_4::GradingRGBMSW*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::GradingRGBMSW(struct ::OpenColorIO_v2_4::GradingRGBMSW* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW((struct ::OpenColorIO_v2_4::GradingRGBMSW*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::~GradingRGBMSW()
{
    delete NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::GradingRGBMSW()
{
    __ownsNativeInstance = true;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingRGBMSW();
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::GradingRGBMSW(double red, double green, double blue, double master, double start, double width)
{
    __ownsNativeInstance = true;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingRGBMSW(red, green, blue, master, start, width);
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::GradingRGBMSW(cli::array<double>^ rgbmsw)
{
    __ownsNativeInstance = true;
    double __0ArrayPtr[6];
    if (rgbmsw != nullptr)
    {
        if (rgbmsw->Length != 6)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 6; i++)
            __0ArrayPtr[i] = rgbmsw[i];
    }
    auto __arg0 = __0ArrayPtr;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingRGBMSW(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::GradingRGBMSW(double start, double width)
{
    __ownsNativeInstance = true;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingRGBMSW(start, width);
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::GradingRGBMSW(OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ _0)
{
    __ownsNativeInstance = true;
    if (ReferenceEquals(_0, nullptr))
        throw gcnew ::System::ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingRGBMSW*)_0->NativePtr;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingRGBMSW(__arg0);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::operator==(OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return lhsNull && rhsNull;
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingRGBMSW*)lhs->NativePtr;
    auto &__arg1 = *(struct ::OpenColorIO_v2_4::GradingRGBMSW*)rhs->NativePtr;
    auto ___ret = __arg0 == __arg1;
    return ___ret;
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::Equals(::System::Object^ obj)
{
    return this == safe_cast<OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^>(obj);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::operator!=(OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return !(lhsNull && rhsNull);
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingRGBMSW*)lhs->NativePtr;
    auto &__arg1 = *(struct ::OpenColorIO_v2_4::GradingRGBMSW*)rhs->NativePtr;
    auto ___ret = __arg0 != __arg1;
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::operator OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^(cli::array<double>^ rgbmsw)
{
    double __0ArrayPtr[6];
    if (rgbmsw != nullptr)
    {
        if (rgbmsw->Length != 6)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 6; i++)
            __0ArrayPtr[i] = rgbmsw[i];
    }
    auto __arg0 = __0ArrayPtr;
    auto ___ret = (::OpenColorIO_v2_4::GradingRGBMSW) __arg0;
    auto _____ret = new struct ::OpenColorIO_v2_4::GradingRGBMSW(___ret);
    return (_____ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW((struct ::OpenColorIO_v2_4::GradingRGBMSW*)_____ret, true);
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::__Instance::set(::System::IntPtr object)
{
    NativePtr = (struct ::OpenColorIO_v2_4::GradingRGBMSW*)object.ToPointer();
}

double OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::MRed::get()
{
    return NativePtr->m_red;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::MRed::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingRGBMSW*)NativePtr)->m_red = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::MGreen::get()
{
    return NativePtr->m_green;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::MGreen::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingRGBMSW*)NativePtr)->m_green = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::MBlue::get()
{
    return NativePtr->m_blue;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::MBlue::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingRGBMSW*)NativePtr)->m_blue = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::MMaster::get()
{
    return NativePtr->m_master;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::MMaster::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingRGBMSW*)NativePtr)->m_master = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::MStart::get()
{
    return NativePtr->m_start;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::MStart::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingRGBMSW*)NativePtr)->m_start = value;
}

double OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::MWidth::get()
{
    return NativePtr->m_width;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW::MWidth::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingRGBMSW*)NativePtr)->m_width = value;
}

OpenColorIO::OpenColorIO_v2_4::GradingTone::GradingTone(struct ::OpenColorIO_v2_4::GradingTone* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingTone^ OpenColorIO::OpenColorIO_v2_4::GradingTone::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingTone((struct ::OpenColorIO_v2_4::GradingTone*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::GradingTone::GradingTone(struct ::OpenColorIO_v2_4::GradingTone* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::GradingTone^ OpenColorIO::OpenColorIO_v2_4::GradingTone::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingTone((struct ::OpenColorIO_v2_4::GradingTone*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::GradingTone::~GradingTone()
{
    delete NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingTone::GradingTone()
{
    __ownsNativeInstance = true;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingTone();
}

OpenColorIO::OpenColorIO_v2_4::GradingTone::GradingTone(OpenColorIO::OpenColorIO_v2_4::GradingStyle style)
{
    __ownsNativeInstance = true;
    auto __arg0 = (enum ::OpenColorIO_v2_4::GradingStyle)style;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingTone(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::GradingTone::Validate()
{
    ((struct ::OpenColorIO_v2_4::GradingTone*)NativePtr)->validate();
}

OpenColorIO::OpenColorIO_v2_4::GradingTone::GradingTone(OpenColorIO::OpenColorIO_v2_4::GradingTone^ _0)
{
    __ownsNativeInstance = true;
    if (ReferenceEquals(_0, nullptr))
        throw gcnew ::System::ArgumentNullException("_0", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingTone*)_0->NativePtr;
    NativePtr = new struct ::OpenColorIO_v2_4::GradingTone(__arg0);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingTone::operator==(OpenColorIO::OpenColorIO_v2_4::GradingTone^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingTone^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return lhsNull && rhsNull;
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingTone*)lhs->NativePtr;
    auto &__arg1 = *(struct ::OpenColorIO_v2_4::GradingTone*)rhs->NativePtr;
    auto ___ret = __arg0 == __arg1;
    return ___ret;
}

bool OpenColorIO::OpenColorIO_v2_4::GradingTone::Equals(::System::Object^ obj)
{
    return this == safe_cast<OpenColorIO::OpenColorIO_v2_4::GradingTone^>(obj);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingTone::operator!=(OpenColorIO::OpenColorIO_v2_4::GradingTone^ lhs, OpenColorIO::OpenColorIO_v2_4::GradingTone^ rhs)
{
    bool lhsNull = ReferenceEquals(lhs, nullptr);
    bool rhsNull = ReferenceEquals(rhs, nullptr);
    if (lhsNull || rhsNull)
        return !(lhsNull && rhsNull);
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingTone*)lhs->NativePtr;
    auto &__arg1 = *(struct ::OpenColorIO_v2_4::GradingTone*)rhs->NativePtr;
    auto ___ret = __arg0 != __arg1;
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::GradingTone::operator OpenColorIO::OpenColorIO_v2_4::GradingTone^(OpenColorIO::OpenColorIO_v2_4::GradingStyle style)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::GradingStyle)style;
    auto ___ret = (::OpenColorIO_v2_4::GradingTone) __arg0;
    auto _____ret = new struct ::OpenColorIO_v2_4::GradingTone(___ret);
    return (_____ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingTone((struct ::OpenColorIO_v2_4::GradingTone*)_____ret, true);
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::GradingTone::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::GradingTone::__Instance::set(::System::IntPtr object)
{
    NativePtr = (struct ::OpenColorIO_v2_4::GradingTone*)object.ToPointer();
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ OpenColorIO::OpenColorIO_v2_4::GradingTone::MBlacks::get()
{
    return (&NativePtr->m_blacks == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW((struct ::OpenColorIO_v2_4::GradingRGBMSW*)&NativePtr->m_blacks);
}

void OpenColorIO::OpenColorIO_v2_4::GradingTone::MBlacks::set(OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is passed by value.");
    ((struct ::OpenColorIO_v2_4::GradingTone*)NativePtr)->m_blacks = *(struct ::OpenColorIO_v2_4::GradingRGBMSW*)value->NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ OpenColorIO::OpenColorIO_v2_4::GradingTone::MShadows::get()
{
    return (&NativePtr->m_shadows == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW((struct ::OpenColorIO_v2_4::GradingRGBMSW*)&NativePtr->m_shadows);
}

void OpenColorIO::OpenColorIO_v2_4::GradingTone::MShadows::set(OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is passed by value.");
    ((struct ::OpenColorIO_v2_4::GradingTone*)NativePtr)->m_shadows = *(struct ::OpenColorIO_v2_4::GradingRGBMSW*)value->NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ OpenColorIO::OpenColorIO_v2_4::GradingTone::MMidtones::get()
{
    return (&NativePtr->m_midtones == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW((struct ::OpenColorIO_v2_4::GradingRGBMSW*)&NativePtr->m_midtones);
}

void OpenColorIO::OpenColorIO_v2_4::GradingTone::MMidtones::set(OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is passed by value.");
    ((struct ::OpenColorIO_v2_4::GradingTone*)NativePtr)->m_midtones = *(struct ::OpenColorIO_v2_4::GradingRGBMSW*)value->NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ OpenColorIO::OpenColorIO_v2_4::GradingTone::MHighlights::get()
{
    return (&NativePtr->m_highlights == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW((struct ::OpenColorIO_v2_4::GradingRGBMSW*)&NativePtr->m_highlights);
}

void OpenColorIO::OpenColorIO_v2_4::GradingTone::MHighlights::set(OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is passed by value.");
    ((struct ::OpenColorIO_v2_4::GradingTone*)NativePtr)->m_highlights = *(struct ::OpenColorIO_v2_4::GradingRGBMSW*)value->NativePtr;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ OpenColorIO::OpenColorIO_v2_4::GradingTone::MWhites::get()
{
    return (&NativePtr->m_whites == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW((struct ::OpenColorIO_v2_4::GradingRGBMSW*)&NativePtr->m_whites);
}

void OpenColorIO::OpenColorIO_v2_4::GradingTone::MWhites::set(OpenColorIO::OpenColorIO_v2_4::GradingRGBMSW^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is passed by value.");
    ((struct ::OpenColorIO_v2_4::GradingTone*)NativePtr)->m_whites = *(struct ::OpenColorIO_v2_4::GradingRGBMSW*)value->NativePtr;
}

double OpenColorIO::OpenColorIO_v2_4::GradingTone::MScontrast::get()
{
    return NativePtr->m_scontrast;
}

void OpenColorIO::OpenColorIO_v2_4::GradingTone::MScontrast::set(double value)
{
    ((struct ::OpenColorIO_v2_4::GradingTone*)NativePtr)->m_scontrast = value;
}

OpenColorIO::OpenColorIO_v2_4::DynamicProperty::DynamicProperty(class ::OpenColorIO_v2_4::DynamicProperty* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::DynamicProperty^ OpenColorIO::OpenColorIO_v2_4::DynamicProperty::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::DynamicProperty((class ::OpenColorIO_v2_4::DynamicProperty*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::DynamicProperty::DynamicProperty(class ::OpenColorIO_v2_4::DynamicProperty* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::DynamicProperty^ OpenColorIO::OpenColorIO_v2_4::DynamicProperty::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::DynamicProperty((class ::OpenColorIO_v2_4::DynamicProperty*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::DynamicProperty::~DynamicProperty()
{
    delete NativePtr;
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::DynamicProperty::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::DynamicProperty::__Instance::set(::System::IntPtr object)
{
    NativePtr = (class ::OpenColorIO_v2_4::DynamicProperty*)object.ToPointer();
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyType OpenColorIO::OpenColorIO_v2_4::DynamicProperty::Type::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::DynamicProperty*)NativePtr)->getType();
    return (OpenColorIO::OpenColorIO_v2_4::DynamicPropertyType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyDouble::DynamicPropertyDouble(class ::OpenColorIO_v2_4::DynamicPropertyDouble* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyDouble^ OpenColorIO::OpenColorIO_v2_4::DynamicPropertyDouble::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::DynamicPropertyDouble((class ::OpenColorIO_v2_4::DynamicPropertyDouble*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyDouble::DynamicPropertyDouble(class ::OpenColorIO_v2_4::DynamicPropertyDouble* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyDouble^ OpenColorIO::OpenColorIO_v2_4::DynamicPropertyDouble::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::DynamicPropertyDouble((class ::OpenColorIO_v2_4::DynamicPropertyDouble*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyDouble::~DynamicPropertyDouble()
{
    delete NativePtr;
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::DynamicPropertyDouble::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::DynamicPropertyDouble::__Instance::set(::System::IntPtr object)
{
    NativePtr = (class ::OpenColorIO_v2_4::DynamicPropertyDouble*)object.ToPointer();
}

double OpenColorIO::OpenColorIO_v2_4::DynamicPropertyDouble::Value::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::DynamicPropertyDouble*)NativePtr)->getValue();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::DynamicPropertyDouble::Value::set(double value)
{
    ((class ::OpenColorIO_v2_4::DynamicPropertyDouble*)NativePtr)->setValue(value);
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingPrimary::DynamicPropertyGradingPrimary(class ::OpenColorIO_v2_4::DynamicPropertyGradingPrimary* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingPrimary^ OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingPrimary::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingPrimary((class ::OpenColorIO_v2_4::DynamicPropertyGradingPrimary*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingPrimary::DynamicPropertyGradingPrimary(class ::OpenColorIO_v2_4::DynamicPropertyGradingPrimary* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingPrimary^ OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingPrimary::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingPrimary((class ::OpenColorIO_v2_4::DynamicPropertyGradingPrimary*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingPrimary::~DynamicPropertyGradingPrimary()
{
    delete NativePtr;
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingPrimary::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingPrimary::__Instance::set(::System::IntPtr object)
{
    NativePtr = (class ::OpenColorIO_v2_4::DynamicPropertyGradingPrimary*)object.ToPointer();
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimary^ OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingPrimary::Value::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::DynamicPropertyGradingPrimary*)NativePtr)->getValue();
    return (OpenColorIO::OpenColorIO_v2_4::GradingPrimary^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingPrimary((struct ::OpenColorIO_v2_4::GradingPrimary*)&___ret));
}

void OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingPrimary::Value::set(OpenColorIO::OpenColorIO_v2_4::GradingPrimary^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingPrimary*)value->NativePtr;
    ((class ::OpenColorIO_v2_4::DynamicPropertyGradingPrimary*)NativePtr)->setValue(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve::DynamicPropertyGradingRGBCurve(class ::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve^ OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve((class ::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve::DynamicPropertyGradingRGBCurve(class ::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve^ OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve((class ::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve::~DynamicPropertyGradingRGBCurve()
{
    delete NativePtr;
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve::__Instance::set(::System::IntPtr object)
{
    NativePtr = (class ::OpenColorIO_v2_4::DynamicPropertyGradingRGBCurve*)object.ToPointer();
}
OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingTone::DynamicPropertyGradingTone(class ::OpenColorIO_v2_4::DynamicPropertyGradingTone* native)
    : __ownsNativeInstance(false)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingTone^ OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingTone::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingTone((class ::OpenColorIO_v2_4::DynamicPropertyGradingTone*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingTone::DynamicPropertyGradingTone(class ::OpenColorIO_v2_4::DynamicPropertyGradingTone* native, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    NativePtr = native;
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingTone^ OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingTone::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingTone((class ::OpenColorIO_v2_4::DynamicPropertyGradingTone*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingTone::~DynamicPropertyGradingTone()
{
    delete NativePtr;
}

::System::IntPtr OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingTone::__Instance::get()
{
    return ::System::IntPtr(NativePtr);
}

void OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingTone::__Instance::set(::System::IntPtr object)
{
    NativePtr = (class ::OpenColorIO_v2_4::DynamicPropertyGradingTone*)object.ToPointer();
}

OpenColorIO::OpenColorIO_v2_4::GradingTone^ OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingTone::Value::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::DynamicPropertyGradingTone*)NativePtr)->getValue();
    return (OpenColorIO::OpenColorIO_v2_4::GradingTone^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingTone((struct ::OpenColorIO_v2_4::GradingTone*)&___ret));
}

void OpenColorIO::OpenColorIO_v2_4::DynamicPropertyGradingTone::Value::set(OpenColorIO::OpenColorIO_v2_4::GradingTone^ value)
{
    if (ReferenceEquals(value, nullptr))
        throw gcnew ::System::ArgumentNullException("value", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingTone*)value->NativePtr;
    ((class ::OpenColorIO_v2_4::DynamicPropertyGradingTone*)NativePtr)->setValue(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::ExponentTransform::ExponentTransform(class ::OpenColorIO_v2_4::ExponentTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::ExponentTransform^ OpenColorIO::OpenColorIO_v2_4::ExponentTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::ExponentTransform((class ::OpenColorIO_v2_4::ExponentTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::ExponentTransform::ExponentTransform(class ::OpenColorIO_v2_4::ExponentTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::ExponentTransform^ OpenColorIO::OpenColorIO_v2_4::ExponentTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::ExponentTransform((class ::OpenColorIO_v2_4::ExponentTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::ExponentTransform::~ExponentTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::ExponentTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::ExponentTransform::Equals(OpenColorIO::OpenColorIO_v2_4::ExponentTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::ExponentTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::ExponentTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ExponentTransform::GetValue(cli::array<double>^ vec4)
{
    double __0ArrayPtr[4];
    if (vec4 != nullptr)
    {
        if (vec4->Length != 4)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 4; i++)
            __0ArrayPtr[i] = vec4[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::ExponentTransform*)NativePtr)->getValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::ExponentTransform::SetValue(cli::array<double>^ vec4)
{
    double __0ArrayPtr[4];
    if (vec4 != nullptr)
    {
        if (vec4->Length != 4)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 4; i++)
            __0ArrayPtr[i] = vec4[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::ExponentTransform*)NativePtr)->setValue(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::ExponentTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExponentTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::ExponentTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::ExponentTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

OpenColorIO::OpenColorIO_v2_4::NegativeStyle OpenColorIO::OpenColorIO_v2_4::ExponentTransform::NegativeStyle::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExponentTransform*)NativePtr)->getNegativeStyle();
    return (OpenColorIO::OpenColorIO_v2_4::NegativeStyle)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ExponentTransform::NegativeStyle::set(OpenColorIO::OpenColorIO_v2_4::NegativeStyle style)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::NegativeStyle)style;
    ((class ::OpenColorIO_v2_4::ExponentTransform*)NativePtr)->setNegativeStyle(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::ExponentWithLinearTransform(class ::OpenColorIO_v2_4::ExponentWithLinearTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform^ OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform((class ::OpenColorIO_v2_4::ExponentWithLinearTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::ExponentWithLinearTransform(class ::OpenColorIO_v2_4::ExponentWithLinearTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform^ OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform((class ::OpenColorIO_v2_4::ExponentWithLinearTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::~ExponentWithLinearTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::ExponentWithLinearTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::Equals(OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::ExponentWithLinearTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::ExponentWithLinearTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::GetGamma(cli::array<double>^ values)
{
    double __0ArrayPtr[4];
    if (values != nullptr)
    {
        if (values->Length != 4)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 4; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::ExponentWithLinearTransform*)NativePtr)->getGamma(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::SetGamma(cli::array<double>^ values)
{
    double __0ArrayPtr[4];
    if (values != nullptr)
    {
        if (values->Length != 4)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 4; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::ExponentWithLinearTransform*)NativePtr)->setGamma(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::GetOffset(cli::array<double>^ values)
{
    double __0ArrayPtr[4];
    if (values != nullptr)
    {
        if (values->Length != 4)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 4; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::ExponentWithLinearTransform*)NativePtr)->getOffset(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::SetOffset(cli::array<double>^ values)
{
    double __0ArrayPtr[4];
    if (values != nullptr)
    {
        if (values->Length != 4)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 4; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::ExponentWithLinearTransform*)NativePtr)->setOffset(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExponentWithLinearTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::ExponentWithLinearTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

OpenColorIO::OpenColorIO_v2_4::NegativeStyle OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::NegativeStyle::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExponentWithLinearTransform*)NativePtr)->getNegativeStyle();
    return (OpenColorIO::OpenColorIO_v2_4::NegativeStyle)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ExponentWithLinearTransform::NegativeStyle::set(OpenColorIO::OpenColorIO_v2_4::NegativeStyle style)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::NegativeStyle)style;
    ((class ::OpenColorIO_v2_4::ExponentWithLinearTransform*)NativePtr)->setNegativeStyle(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::ExposureContrastTransform(class ::OpenColorIO_v2_4::ExposureContrastTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform^ OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform((class ::OpenColorIO_v2_4::ExposureContrastTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::ExposureContrastTransform(class ::OpenColorIO_v2_4::ExposureContrastTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform^ OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform((class ::OpenColorIO_v2_4::ExposureContrastTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::~ExposureContrastTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::ExposureContrastTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::Equals(OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::ExposureContrastTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::MakeExposureDynamic()
{
    ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->makeExposureDynamic();
}

void OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::MakeExposureNonDynamic()
{
    ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->makeExposureNonDynamic();
}

void OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::MakeContrastDynamic()
{
    ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->makeContrastDynamic();
}

void OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::MakeContrastNonDynamic()
{
    ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->makeContrastNonDynamic();
}

void OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::MakeGammaDynamic()
{
    ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->makeGammaDynamic();
}

void OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::MakeGammaNonDynamic()
{
    ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->makeGammaNonDynamic();
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

OpenColorIO::OpenColorIO_v2_4::ExposureContrastStyle OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::Style::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->getStyle();
    return (OpenColorIO::OpenColorIO_v2_4::ExposureContrastStyle)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::Style::set(OpenColorIO::OpenColorIO_v2_4::ExposureContrastStyle style)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::ExposureContrastStyle)style;
    ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->setStyle(__arg0);
}

double OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::Exposure::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->getExposure();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::Exposure::set(double exposure)
{
    ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->setExposure(exposure);
}

bool OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::IsExposureDynamic::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->isExposureDynamic();
    return ___ret;
}

double OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::Contrast::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->getContrast();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::Contrast::set(double contrast)
{
    ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->setContrast(contrast);
}

bool OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::IsContrastDynamic::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->isContrastDynamic();
    return ___ret;
}

double OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::Gamma::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->getGamma();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::Gamma::set(double gamma)
{
    ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->setGamma(gamma);
}

bool OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::IsGammaDynamic::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->isGammaDynamic();
    return ___ret;
}

double OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::Pivot::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->getPivot();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::Pivot::set(double pivot)
{
    ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->setPivot(pivot);
}

double OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::LogExposureStep::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->getLogExposureStep();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::LogExposureStep::set(double logExposureStep)
{
    ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->setLogExposureStep(logExposureStep);
}

double OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::LogMidGray::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->getLogMidGray();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::ExposureContrastTransform::LogMidGray::set(double logMidGray)
{
    ((class ::OpenColorIO_v2_4::ExposureContrastTransform*)NativePtr)->setLogMidGray(logMidGray);
}

OpenColorIO::OpenColorIO_v2_4::FileTransform::FileTransform(class ::OpenColorIO_v2_4::FileTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::FileTransform^ OpenColorIO::OpenColorIO_v2_4::FileTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::FileTransform((class ::OpenColorIO_v2_4::FileTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::FileTransform::FileTransform(class ::OpenColorIO_v2_4::FileTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::FileTransform^ OpenColorIO::OpenColorIO_v2_4::FileTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::FileTransform((class ::OpenColorIO_v2_4::FileTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::FileTransform::~FileTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::FileTransform*) __nativePtr;
    }
}

void OpenColorIO::OpenColorIO_v2_4::FileTransform::Validate()
{
    ((class ::OpenColorIO_v2_4::FileTransform*)NativePtr)->validate();
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::FileTransform::GetFormatNameByIndex(int index)
{
    auto ___ret = ::OpenColorIO_v2_4::FileTransform::GetFormatNameByIndex(index);
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::FileTransform::GetFormatExtensionByIndex(int index)
{
    auto ___ret = ::OpenColorIO_v2_4::FileTransform::GetFormatExtensionByIndex(index);
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

bool OpenColorIO::OpenColorIO_v2_4::FileTransform::IsFormatExtensionSupported(::System::String^ extension)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(extension);
    auto __arg0 = ___arg0.c_str();
    auto ___ret = ::OpenColorIO_v2_4::FileTransform::IsFormatExtensionSupported(__arg0);
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::TransformDirection OpenColorIO::OpenColorIO_v2_4::FileTransform::Direction::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FileTransform*)NativePtr)->getDirection();
    return (OpenColorIO::OpenColorIO_v2_4::TransformDirection)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::FileTransform::Direction::set(OpenColorIO::OpenColorIO_v2_4::TransformDirection dir)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::TransformDirection)dir;
    ((class ::OpenColorIO_v2_4::FileTransform*)NativePtr)->setDirection(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::FileTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FileTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::FileTransform::Src::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FileTransform*)NativePtr)->getSrc();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::FileTransform::Src::set(::System::String^ src)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(src);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::FileTransform*)NativePtr)->setSrc(__arg0);
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::FileTransform::CCCId::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FileTransform*)NativePtr)->getCCCId();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::FileTransform::CCCId::set(::System::String^ id)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(id);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::FileTransform*)NativePtr)->setCCCId(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::CDLStyle OpenColorIO::OpenColorIO_v2_4::FileTransform::CDLStyle::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FileTransform*)NativePtr)->getCDLStyle();
    return (OpenColorIO::OpenColorIO_v2_4::CDLStyle)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::FileTransform::CDLStyle::set(OpenColorIO::OpenColorIO_v2_4::CDLStyle _0)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::CDLStyle)_0;
    ((class ::OpenColorIO_v2_4::FileTransform*)NativePtr)->setCDLStyle(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::Interpolation OpenColorIO::OpenColorIO_v2_4::FileTransform::Interpolation::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FileTransform*)NativePtr)->getInterpolation();
    return (OpenColorIO::OpenColorIO_v2_4::Interpolation)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::FileTransform::Interpolation::set(OpenColorIO::OpenColorIO_v2_4::Interpolation interp)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::Interpolation)interp;
    ((class ::OpenColorIO_v2_4::FileTransform*)NativePtr)->setInterpolation(__arg0);
}

int OpenColorIO::OpenColorIO_v2_4::FileTransform::NumFormats::get()
{
    auto ___ret = ::OpenColorIO_v2_4::FileTransform::GetNumFormats();
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform::FixedFunctionTransform(class ::OpenColorIO_v2_4::FixedFunctionTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform^ OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform((class ::OpenColorIO_v2_4::FixedFunctionTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform::FixedFunctionTransform(class ::OpenColorIO_v2_4::FixedFunctionTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform^ OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform((class ::OpenColorIO_v2_4::FixedFunctionTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform::~FixedFunctionTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::FixedFunctionTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform::Equals(OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::FixedFunctionTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::FixedFunctionTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform::GetParams([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% params)
{
    double __arg0 = params;
    ((class ::OpenColorIO_v2_4::FixedFunctionTransform*)NativePtr)->getParams(&__arg0);
    params = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform::SetParams([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% params, unsigned long long num)
{
    double __arg0 = params;
    auto __arg1 = num;
    ((class ::OpenColorIO_v2_4::FixedFunctionTransform*)NativePtr)->setParams(&__arg0, __arg1);
    params = __arg0;
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FixedFunctionTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::FixedFunctionTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

OpenColorIO::OpenColorIO_v2_4::FixedFunctionStyle OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform::Style::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FixedFunctionTransform*)NativePtr)->getStyle();
    return (OpenColorIO::OpenColorIO_v2_4::FixedFunctionStyle)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform::Style::set(OpenColorIO::OpenColorIO_v2_4::FixedFunctionStyle style)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::FixedFunctionStyle)style;
    ((class ::OpenColorIO_v2_4::FixedFunctionTransform*)NativePtr)->setStyle(__arg0);
}

unsigned long long OpenColorIO::OpenColorIO_v2_4::FixedFunctionTransform::NumParams::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::FixedFunctionTransform*)NativePtr)->getNumParams();
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::GradingPrimaryTransform(class ::OpenColorIO_v2_4::GradingPrimaryTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform^ OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform((class ::OpenColorIO_v2_4::GradingPrimaryTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::GradingPrimaryTransform(class ::OpenColorIO_v2_4::GradingPrimaryTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform^ OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform((class ::OpenColorIO_v2_4::GradingPrimaryTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::~GradingPrimaryTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::GradingPrimaryTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::Equals(OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::GradingPrimaryTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingPrimaryTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::MakeDynamic()
{
    ((class ::OpenColorIO_v2_4::GradingPrimaryTransform*)NativePtr)->makeDynamic();
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::MakeNonDynamic()
{
    ((class ::OpenColorIO_v2_4::GradingPrimaryTransform*)NativePtr)->makeNonDynamic();
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingPrimaryTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::GradingPrimaryTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

OpenColorIO::OpenColorIO_v2_4::GradingStyle OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::Style::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingPrimaryTransform*)NativePtr)->getStyle();
    return (OpenColorIO::OpenColorIO_v2_4::GradingStyle)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::Style::set(OpenColorIO::OpenColorIO_v2_4::GradingStyle style)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::GradingStyle)style;
    ((class ::OpenColorIO_v2_4::GradingPrimaryTransform*)NativePtr)->setStyle(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::GradingPrimary^ OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::Value::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::GradingPrimaryTransform*)NativePtr)->getValue();
    return (OpenColorIO::OpenColorIO_v2_4::GradingPrimary^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingPrimary((struct ::OpenColorIO_v2_4::GradingPrimary*)&___ret));
}

void OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::Value::set(OpenColorIO::OpenColorIO_v2_4::GradingPrimary^ values)
{
    if (ReferenceEquals(values, nullptr))
        throw gcnew ::System::ArgumentNullException("values", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingPrimary*)values->NativePtr;
    ((class ::OpenColorIO_v2_4::GradingPrimaryTransform*)NativePtr)->setValue(__arg0);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingPrimaryTransform::IsDynamic::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingPrimaryTransform*)NativePtr)->isDynamic();
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::GradingRGBCurveTransform(class ::OpenColorIO_v2_4::GradingRGBCurveTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform^ OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::GradingRGBCurveTransform(class ::OpenColorIO_v2_4::GradingRGBCurveTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform^ OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::~GradingRGBCurveTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::GradingRGBCurveTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::Equals(OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

float OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::GetSlope(OpenColorIO::OpenColorIO_v2_4::RGBCurveType c, unsigned long long index)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::RGBCurveType)c;
    auto __arg1 = index;
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)NativePtr)->getSlope(__arg0, __arg1);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::SetSlope(OpenColorIO::OpenColorIO_v2_4::RGBCurveType c, unsigned long long index, float slope)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::RGBCurveType)c;
    auto __arg1 = index;
    ((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)NativePtr)->setSlope(__arg0, __arg1, slope);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::SlopesAreDefault(OpenColorIO::OpenColorIO_v2_4::RGBCurveType c)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::RGBCurveType)c;
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)NativePtr)->slopesAreDefault(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::MakeDynamic()
{
    ((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)NativePtr)->makeDynamic();
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::MakeNonDynamic()
{
    ((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)NativePtr)->makeNonDynamic();
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

OpenColorIO::OpenColorIO_v2_4::GradingStyle OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::Style::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)NativePtr)->getStyle();
    return (OpenColorIO::OpenColorIO_v2_4::GradingStyle)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::Style::set(OpenColorIO::OpenColorIO_v2_4::GradingStyle style)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::GradingStyle)style;
    ((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)NativePtr)->setStyle(__arg0);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::BypassLinToLog::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)NativePtr)->getBypassLinToLog();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::BypassLinToLog::set(bool bypass)
{
    ((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)NativePtr)->setBypassLinToLog(bypass);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingRGBCurveTransform::IsDynamic::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingRGBCurveTransform*)NativePtr)->isDynamic();
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::GradingToneTransform(class ::OpenColorIO_v2_4::GradingToneTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::GradingToneTransform^ OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingToneTransform((class ::OpenColorIO_v2_4::GradingToneTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::GradingToneTransform(class ::OpenColorIO_v2_4::GradingToneTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::GradingToneTransform^ OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingToneTransform((class ::OpenColorIO_v2_4::GradingToneTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::~GradingToneTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::GradingToneTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::Equals(OpenColorIO::OpenColorIO_v2_4::GradingToneTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::GradingToneTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingToneTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::MakeDynamic()
{
    ((class ::OpenColorIO_v2_4::GradingToneTransform*)NativePtr)->makeDynamic();
}

void OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::MakeNonDynamic()
{
    ((class ::OpenColorIO_v2_4::GradingToneTransform*)NativePtr)->makeNonDynamic();
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingToneTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::GradingToneTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

OpenColorIO::OpenColorIO_v2_4::GradingStyle OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::Style::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingToneTransform*)NativePtr)->getStyle();
    return (OpenColorIO::OpenColorIO_v2_4::GradingStyle)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::Style::set(OpenColorIO::OpenColorIO_v2_4::GradingStyle style)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::GradingStyle)style;
    ((class ::OpenColorIO_v2_4::GradingToneTransform*)NativePtr)->setStyle(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::GradingTone^ OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::Value::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::GradingToneTransform*)NativePtr)->getValue();
    return (OpenColorIO::OpenColorIO_v2_4::GradingTone^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::GradingTone((struct ::OpenColorIO_v2_4::GradingTone*)&___ret));
}

void OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::Value::set(OpenColorIO::OpenColorIO_v2_4::GradingTone^ values)
{
    if (ReferenceEquals(values, nullptr))
        throw gcnew ::System::ArgumentNullException("values", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(struct ::OpenColorIO_v2_4::GradingTone*)values->NativePtr;
    ((class ::OpenColorIO_v2_4::GradingToneTransform*)NativePtr)->setValue(__arg0);
}

bool OpenColorIO::OpenColorIO_v2_4::GradingToneTransform::IsDynamic::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GradingToneTransform*)NativePtr)->isDynamic();
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::GroupTransform::GroupTransform(class ::OpenColorIO_v2_4::GroupTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::GroupTransform^ OpenColorIO::OpenColorIO_v2_4::GroupTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GroupTransform((class ::OpenColorIO_v2_4::GroupTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::GroupTransform::GroupTransform(class ::OpenColorIO_v2_4::GroupTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::GroupTransform^ OpenColorIO::OpenColorIO_v2_4::GroupTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::GroupTransform((class ::OpenColorIO_v2_4::GroupTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::GroupTransform::~GroupTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::GroupTransform*) __nativePtr;
    }
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::GroupTransform::GetFormatNameByIndex(int index)
{
    auto ___ret = ::OpenColorIO_v2_4::GroupTransform::GetFormatNameByIndex(index);
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::GroupTransform::GetFormatExtensionByIndex(int index)
{
    auto ___ret = ::OpenColorIO_v2_4::GroupTransform::GetFormatExtensionByIndex(index);
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::GroupTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::GroupTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

int OpenColorIO::OpenColorIO_v2_4::GroupTransform::NumTransforms::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::GroupTransform*)NativePtr)->getNumTransforms();
    return ___ret;
}

int OpenColorIO::OpenColorIO_v2_4::GroupTransform::NumWriteFormats::get()
{
    auto ___ret = ::OpenColorIO_v2_4::GroupTransform::GetNumWriteFormats();
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::LogAffineTransform(class ::OpenColorIO_v2_4::LogAffineTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::LogAffineTransform^ OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::LogAffineTransform((class ::OpenColorIO_v2_4::LogAffineTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::LogAffineTransform(class ::OpenColorIO_v2_4::LogAffineTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::LogAffineTransform^ OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::LogAffineTransform((class ::OpenColorIO_v2_4::LogAffineTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::~LogAffineTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::LogAffineTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::Equals(OpenColorIO::OpenColorIO_v2_4::LogAffineTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::LogAffineTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::LogAffineTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::GetLogSideSlopeValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogAffineTransform*)NativePtr)->getLogSideSlopeValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::SetLogSideSlopeValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogAffineTransform*)NativePtr)->setLogSideSlopeValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::GetLogSideOffsetValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogAffineTransform*)NativePtr)->getLogSideOffsetValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::SetLogSideOffsetValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogAffineTransform*)NativePtr)->setLogSideOffsetValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::GetLinSideSlopeValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogAffineTransform*)NativePtr)->getLinSideSlopeValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::SetLinSideSlopeValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogAffineTransform*)NativePtr)->setLinSideSlopeValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::GetLinSideOffsetValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogAffineTransform*)NativePtr)->getLinSideOffsetValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::SetLinSideOffsetValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogAffineTransform*)NativePtr)->setLinSideOffsetValue(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::LogAffineTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::LogAffineTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

double OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::Base::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::LogAffineTransform*)NativePtr)->getBase();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::LogAffineTransform::Base::set(double base)
{
    ((class ::OpenColorIO_v2_4::LogAffineTransform*)NativePtr)->setBase(base);
}

OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::LogCameraTransform(class ::OpenColorIO_v2_4::LogCameraTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::LogCameraTransform^ OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::LogCameraTransform((class ::OpenColorIO_v2_4::LogCameraTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::LogCameraTransform(class ::OpenColorIO_v2_4::LogCameraTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::LogCameraTransform^ OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::LogCameraTransform((class ::OpenColorIO_v2_4::LogCameraTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::~LogCameraTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::LogCameraTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::Equals(OpenColorIO::OpenColorIO_v2_4::LogCameraTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::LogCameraTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::GetLogSideSlopeValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->getLogSideSlopeValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::SetLogSideSlopeValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->setLogSideSlopeValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::GetLogSideOffsetValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->getLogSideOffsetValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::SetLogSideOffsetValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->setLogSideOffsetValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::GetLinSideSlopeValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->getLinSideSlopeValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::SetLinSideSlopeValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->setLinSideSlopeValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::GetLinSideOffsetValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->getLinSideOffsetValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::SetLinSideOffsetValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->setLinSideOffsetValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::GetLinSideBreakValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->getLinSideBreakValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::SetLinSideBreakValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->setLinSideBreakValue(__arg0);
}

bool OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::GetLinearSlopeValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->getLinearSlopeValue(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::SetLinearSlopeValue(cli::array<double>^ values)
{
    double __0ArrayPtr[3];
    if (values != nullptr)
    {
        if (values->Length != 3)
        {
            throw gcnew ::System::InvalidOperationException("Source array size must equal destination array size.");
        }
        for (int i = 0; i < 3; i++)
            __0ArrayPtr[i] = values[i];
    }
    auto __arg0 = __0ArrayPtr;
    ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->setLinearSlopeValue(__arg0);
}

void OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::UnsetLinearSlopeValue()
{
    ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->unsetLinearSlopeValue();
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

double OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::Base::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->getBase();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::LogCameraTransform::Base::set(double base)
{
    ((class ::OpenColorIO_v2_4::LogCameraTransform*)NativePtr)->setBase(base);
}

OpenColorIO::OpenColorIO_v2_4::LogTransform::LogTransform(class ::OpenColorIO_v2_4::LogTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::LogTransform^ OpenColorIO::OpenColorIO_v2_4::LogTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::LogTransform((class ::OpenColorIO_v2_4::LogTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::LogTransform::LogTransform(class ::OpenColorIO_v2_4::LogTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::LogTransform^ OpenColorIO::OpenColorIO_v2_4::LogTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::LogTransform((class ::OpenColorIO_v2_4::LogTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::LogTransform::~LogTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::LogTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::LogTransform::Equals(OpenColorIO::OpenColorIO_v2_4::LogTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::LogTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::LogTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::LogTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::LogTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::LogTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::LogTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

double OpenColorIO::OpenColorIO_v2_4::LogTransform::Base::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::LogTransform*)NativePtr)->getBase();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::LogTransform::Base::set(double val)
{
    ((class ::OpenColorIO_v2_4::LogTransform*)NativePtr)->setBase(val);
}

OpenColorIO::OpenColorIO_v2_4::LookTransform::LookTransform(class ::OpenColorIO_v2_4::LookTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::LookTransform^ OpenColorIO::OpenColorIO_v2_4::LookTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::LookTransform((class ::OpenColorIO_v2_4::LookTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::LookTransform::LookTransform(class ::OpenColorIO_v2_4::LookTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::LookTransform^ OpenColorIO::OpenColorIO_v2_4::LookTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::LookTransform((class ::OpenColorIO_v2_4::LookTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::LookTransform::~LookTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::LookTransform*) __nativePtr;
    }
}

void OpenColorIO::OpenColorIO_v2_4::LookTransform::Validate()
{
    ((class ::OpenColorIO_v2_4::LookTransform*)NativePtr)->validate();
}

OpenColorIO::OpenColorIO_v2_4::TransformDirection OpenColorIO::OpenColorIO_v2_4::LookTransform::Direction::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::LookTransform*)NativePtr)->getDirection();
    return (OpenColorIO::OpenColorIO_v2_4::TransformDirection)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::LookTransform::Direction::set(OpenColorIO::OpenColorIO_v2_4::TransformDirection dir)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::TransformDirection)dir;
    ((class ::OpenColorIO_v2_4::LookTransform*)NativePtr)->setDirection(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::LookTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::LookTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::LookTransform::Src::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::LookTransform*)NativePtr)->getSrc();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::LookTransform::Src::set(::System::String^ src)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(src);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::LookTransform*)NativePtr)->setSrc(__arg0);
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::LookTransform::Dst::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::LookTransform*)NativePtr)->getDst();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::LookTransform::Dst::set(::System::String^ dst)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(dst);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::LookTransform*)NativePtr)->setDst(__arg0);
}

::System::String^ OpenColorIO::OpenColorIO_v2_4::LookTransform::Looks::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::LookTransform*)NativePtr)->getLooks();
    if (___ret == nullptr) return nullptr;
    return (___ret == 0 ? nullptr : clix::marshalString<clix::E_UTF8>(___ret));
}

void OpenColorIO::OpenColorIO_v2_4::LookTransform::Looks::set(::System::String^ looks)
{
    auto ___arg0 = clix::marshalString<clix::E_UTF8>(looks);
    auto __arg0 = ___arg0.c_str();
    ((class ::OpenColorIO_v2_4::LookTransform*)NativePtr)->setLooks(__arg0);
}

bool OpenColorIO::OpenColorIO_v2_4::LookTransform::SkipColorSpaceConversion::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::LookTransform*)NativePtr)->getSkipColorSpaceConversion();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::LookTransform::SkipColorSpaceConversion::set(bool skip)
{
    ((class ::OpenColorIO_v2_4::LookTransform*)NativePtr)->setSkipColorSpaceConversion(skip);
}

OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::Lut1DTransform(class ::OpenColorIO_v2_4::Lut1DTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::Lut1DTransform^ OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::Lut1DTransform((class ::OpenColorIO_v2_4::Lut1DTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::Lut1DTransform(class ::OpenColorIO_v2_4::Lut1DTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::Lut1DTransform^ OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::Lut1DTransform((class ::OpenColorIO_v2_4::Lut1DTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::~Lut1DTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::Lut1DTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::Equals(OpenColorIO::OpenColorIO_v2_4::Lut1DTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::Lut1DTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::GetValue(unsigned long index, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] float% r, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] float% g, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] float% b)
{
    float __arg1 = r;
    float __arg2 = g;
    float __arg3 = b;
    ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->getValue(index, __arg1, __arg2, __arg3);
    r = __arg1;
    g = __arg2;
    b = __arg3;
}

void OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::SetValue(unsigned long index, float r, float g, float b)
{
    ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->setValue(index, r, g, b);
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::BitDepth OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::FileOutputBitDepth::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->getFileOutputBitDepth();
    return (OpenColorIO::OpenColorIO_v2_4::BitDepth)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::FileOutputBitDepth::set(OpenColorIO::OpenColorIO_v2_4::BitDepth bitDepth)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::BitDepth)bitDepth;
    ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->setFileOutputBitDepth(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

unsigned long OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::Length::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->getLength();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::Length::set(unsigned long length)
{
    ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->setLength(length);
}

bool OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::InputHalfDomain::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->getInputHalfDomain();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::InputHalfDomain::set(bool isHalfDomain)
{
    ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->setInputHalfDomain(isHalfDomain);
}

bool OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::OutputRawHalfs::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->getOutputRawHalfs();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::OutputRawHalfs::set(bool isRawHalfs)
{
    ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->setOutputRawHalfs(isRawHalfs);
}

OpenColorIO::OpenColorIO_v2_4::Lut1DHueAdjust OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::HueAdjust::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->getHueAdjust();
    return (OpenColorIO::OpenColorIO_v2_4::Lut1DHueAdjust)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::HueAdjust::set(OpenColorIO::OpenColorIO_v2_4::Lut1DHueAdjust algo)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::Lut1DHueAdjust)algo;
    ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->setHueAdjust(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::Interpolation OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::Interpolation::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->getInterpolation();
    return (OpenColorIO::OpenColorIO_v2_4::Interpolation)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::Lut1DTransform::Interpolation::set(OpenColorIO::OpenColorIO_v2_4::Interpolation algo)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::Interpolation)algo;
    ((class ::OpenColorIO_v2_4::Lut1DTransform*)NativePtr)->setInterpolation(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::Lut3DTransform(class ::OpenColorIO_v2_4::Lut3DTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::Lut3DTransform^ OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::Lut3DTransform((class ::OpenColorIO_v2_4::Lut3DTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::Lut3DTransform(class ::OpenColorIO_v2_4::Lut3DTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::Lut3DTransform^ OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::Lut3DTransform((class ::OpenColorIO_v2_4::Lut3DTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::~Lut3DTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::Lut3DTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::Equals(OpenColorIO::OpenColorIO_v2_4::Lut3DTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::Lut3DTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::Lut3DTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::GetValue(unsigned long indexR, unsigned long indexG, unsigned long indexB, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] float% r, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] float% g, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] float% b)
{
    float __arg3 = r;
    float __arg4 = g;
    float __arg5 = b;
    ((class ::OpenColorIO_v2_4::Lut3DTransform*)NativePtr)->getValue(indexR, indexG, indexB, __arg3, __arg4, __arg5);
    r = __arg3;
    g = __arg4;
    b = __arg5;
}

void OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::SetValue(unsigned long indexR, unsigned long indexG, unsigned long indexB, float r, float g, float b)
{
    ((class ::OpenColorIO_v2_4::Lut3DTransform*)NativePtr)->setValue(indexR, indexG, indexB, r, g, b);
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::Lut3DTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::BitDepth OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::FileOutputBitDepth::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::Lut3DTransform*)NativePtr)->getFileOutputBitDepth();
    return (OpenColorIO::OpenColorIO_v2_4::BitDepth)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::FileOutputBitDepth::set(OpenColorIO::OpenColorIO_v2_4::BitDepth bitDepth)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::BitDepth)bitDepth;
    ((class ::OpenColorIO_v2_4::Lut3DTransform*)NativePtr)->setFileOutputBitDepth(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::Lut3DTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

unsigned long OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::GridSize::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::Lut3DTransform*)NativePtr)->getGridSize();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::GridSize::set(unsigned long gridSize)
{
    ((class ::OpenColorIO_v2_4::Lut3DTransform*)NativePtr)->setGridSize(gridSize);
}

OpenColorIO::OpenColorIO_v2_4::Interpolation OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::Interpolation::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::Lut3DTransform*)NativePtr)->getInterpolation();
    return (OpenColorIO::OpenColorIO_v2_4::Interpolation)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::Lut3DTransform::Interpolation::set(OpenColorIO::OpenColorIO_v2_4::Interpolation algo)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::Interpolation)algo;
    ((class ::OpenColorIO_v2_4::Lut3DTransform*)NativePtr)->setInterpolation(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::MatrixTransform::MatrixTransform(class ::OpenColorIO_v2_4::MatrixTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::MatrixTransform^ OpenColorIO::OpenColorIO_v2_4::MatrixTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::MatrixTransform((class ::OpenColorIO_v2_4::MatrixTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::MatrixTransform::MatrixTransform(class ::OpenColorIO_v2_4::MatrixTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::MatrixTransform^ OpenColorIO::OpenColorIO_v2_4::MatrixTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::MatrixTransform((class ::OpenColorIO_v2_4::MatrixTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::MatrixTransform::~MatrixTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::MatrixTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::MatrixTransform::Equals(OpenColorIO::OpenColorIO_v2_4::MatrixTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::MatrixTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::MatrixTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::MatrixTransform::GetMatrix([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% m44)
{
    double __arg0 = m44;
    ((class ::OpenColorIO_v2_4::MatrixTransform*)NativePtr)->getMatrix(&__arg0);
    m44 = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::MatrixTransform::SetMatrix([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% m44)
{
    double __arg0 = m44;
    ((class ::OpenColorIO_v2_4::MatrixTransform*)NativePtr)->setMatrix(&__arg0);
    m44 = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::MatrixTransform::GetOffset([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% offset4)
{
    double __arg0 = offset4;
    ((class ::OpenColorIO_v2_4::MatrixTransform*)NativePtr)->getOffset(&__arg0);
    offset4 = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::MatrixTransform::SetOffset([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% offset4)
{
    double __arg0 = offset4;
    ((class ::OpenColorIO_v2_4::MatrixTransform*)NativePtr)->setOffset(&__arg0);
    offset4 = __arg0;
}

void OpenColorIO::OpenColorIO_v2_4::MatrixTransform::Fit([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% m44, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% offset4, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% oldmin4, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% oldmax4, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% newmin4, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% newmax4)
{
    double __arg0 = m44;
    double __arg1 = offset4;
    double __arg2 = oldmin4;
    double __arg3 = oldmax4;
    double __arg4 = newmin4;
    double __arg5 = newmax4;
    ::OpenColorIO_v2_4::MatrixTransform::Fit(&__arg0, &__arg1, &__arg2, &__arg3, &__arg4, &__arg5);
    m44 = __arg0;
    offset4 = __arg1;
    oldmin4 = __arg2;
    oldmax4 = __arg3;
    newmin4 = __arg4;
    newmax4 = __arg5;
}

void OpenColorIO::OpenColorIO_v2_4::MatrixTransform::Identity([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% m44, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% offset4)
{
    double __arg0 = m44;
    double __arg1 = offset4;
    ::OpenColorIO_v2_4::MatrixTransform::Identity(&__arg0, &__arg1);
    m44 = __arg0;
    offset4 = __arg1;
}

void OpenColorIO::OpenColorIO_v2_4::MatrixTransform::Sat([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% m44, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% offset4, double sat, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% lumaCoef3)
{
    double __arg0 = m44;
    double __arg1 = offset4;
    double __arg3 = lumaCoef3;
    ::OpenColorIO_v2_4::MatrixTransform::Sat(&__arg0, &__arg1, sat, &__arg3);
    m44 = __arg0;
    offset4 = __arg1;
    lumaCoef3 = __arg3;
}

void OpenColorIO::OpenColorIO_v2_4::MatrixTransform::Scale([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% m44, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% offset4, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% scale4)
{
    double __arg0 = m44;
    double __arg1 = offset4;
    double __arg2 = scale4;
    ::OpenColorIO_v2_4::MatrixTransform::Scale(&__arg0, &__arg1, &__arg2);
    m44 = __arg0;
    offset4 = __arg1;
    scale4 = __arg2;
}

void OpenColorIO::OpenColorIO_v2_4::MatrixTransform::View([::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% m44, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% offset4, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] int% channelHot4, [::System::Runtime::InteropServices::In, ::System::Runtime::InteropServices::Out] double% lumaCoef3)
{
    double __arg0 = m44;
    double __arg1 = offset4;
    int __arg2 = channelHot4;
    double __arg3 = lumaCoef3;
    ::OpenColorIO_v2_4::MatrixTransform::View(&__arg0, &__arg1, &__arg2, &__arg3);
    m44 = __arg0;
    offset4 = __arg1;
    channelHot4 = __arg2;
    lumaCoef3 = __arg3;
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::MatrixTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::MatrixTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::MatrixTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::MatrixTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

OpenColorIO::OpenColorIO_v2_4::BitDepth OpenColorIO::OpenColorIO_v2_4::MatrixTransform::FileInputBitDepth::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::MatrixTransform*)NativePtr)->getFileInputBitDepth();
    return (OpenColorIO::OpenColorIO_v2_4::BitDepth)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::MatrixTransform::FileInputBitDepth::set(OpenColorIO::OpenColorIO_v2_4::BitDepth bitDepth)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::BitDepth)bitDepth;
    ((class ::OpenColorIO_v2_4::MatrixTransform*)NativePtr)->setFileInputBitDepth(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::BitDepth OpenColorIO::OpenColorIO_v2_4::MatrixTransform::FileOutputBitDepth::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::MatrixTransform*)NativePtr)->getFileOutputBitDepth();
    return (OpenColorIO::OpenColorIO_v2_4::BitDepth)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::MatrixTransform::FileOutputBitDepth::set(OpenColorIO::OpenColorIO_v2_4::BitDepth bitDepth)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::BitDepth)bitDepth;
    ((class ::OpenColorIO_v2_4::MatrixTransform*)NativePtr)->setFileOutputBitDepth(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::RangeTransform::RangeTransform(class ::OpenColorIO_v2_4::RangeTransform* native)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native)
{
}

OpenColorIO::OpenColorIO_v2_4::RangeTransform^ OpenColorIO::OpenColorIO_v2_4::RangeTransform::__CreateInstance(::System::IntPtr native)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::RangeTransform((class ::OpenColorIO_v2_4::RangeTransform*) native.ToPointer());
}

OpenColorIO::OpenColorIO_v2_4::RangeTransform::RangeTransform(class ::OpenColorIO_v2_4::RangeTransform* native, bool ownNativeInstance)
    : OpenColorIO::OpenColorIO_v2_4::Transform((::OpenColorIO_v2_4::Transform*)native, ownNativeInstance)
{
}

OpenColorIO::OpenColorIO_v2_4::RangeTransform^ OpenColorIO::OpenColorIO_v2_4::RangeTransform::__CreateInstance(::System::IntPtr native, bool __ownsNativeInstance)
{
    return gcnew ::OpenColorIO::OpenColorIO_v2_4::RangeTransform((class ::OpenColorIO_v2_4::RangeTransform*) native.ToPointer(), __ownsNativeInstance);
}

OpenColorIO::OpenColorIO_v2_4::RangeTransform::~RangeTransform()
{
    if (NativePtr)
    {
        auto __nativePtr = NativePtr;
        NativePtr = 0;
        delete (class ::OpenColorIO_v2_4::RangeTransform*) __nativePtr;
    }
}

bool OpenColorIO::OpenColorIO_v2_4::RangeTransform::Equals(OpenColorIO::OpenColorIO_v2_4::RangeTransform^ other)
{
    if (ReferenceEquals(other, nullptr))
        throw gcnew ::System::ArgumentNullException("other", "Cannot be null because it is a C++ reference (&).");
    auto &__arg0 = *(class ::OpenColorIO_v2_4::RangeTransform*)other->NativePtr;
    auto ___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->equals(__arg0);
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::RangeTransform::UnsetMinInValue()
{
    ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->unsetMinInValue();
}

void OpenColorIO::OpenColorIO_v2_4::RangeTransform::UnsetMaxInValue()
{
    ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->unsetMaxInValue();
}

void OpenColorIO::OpenColorIO_v2_4::RangeTransform::UnsetMinOutValue()
{
    ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->unsetMinOutValue();
}

void OpenColorIO::OpenColorIO_v2_4::RangeTransform::UnsetMaxOutValue()
{
    ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->unsetMaxOutValue();
}

OpenColorIO::OpenColorIO_v2_4::TransformType OpenColorIO::OpenColorIO_v2_4::RangeTransform::TransformType::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->getTransformType();
    return (OpenColorIO::OpenColorIO_v2_4::TransformType)___ret;
}

OpenColorIO::OpenColorIO_v2_4::RangeStyle OpenColorIO::OpenColorIO_v2_4::RangeTransform::Style::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->getStyle();
    return (OpenColorIO::OpenColorIO_v2_4::RangeStyle)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::RangeTransform::Style::set(OpenColorIO::OpenColorIO_v2_4::RangeStyle style)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::RangeStyle)style;
    ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->setStyle(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::FormatMetadata^ OpenColorIO::OpenColorIO_v2_4::RangeTransform::FormatMetadata::get()
{
    auto &___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->getFormatMetadata();
    return (OpenColorIO::OpenColorIO_v2_4::FormatMetadata^)((&___ret == nullptr) ? nullptr : gcnew ::OpenColorIO::OpenColorIO_v2_4::FormatMetadata((class ::OpenColorIO_v2_4::FormatMetadata*)&___ret));
}

OpenColorIO::OpenColorIO_v2_4::BitDepth OpenColorIO::OpenColorIO_v2_4::RangeTransform::FileInputBitDepth::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->getFileInputBitDepth();
    return (OpenColorIO::OpenColorIO_v2_4::BitDepth)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::RangeTransform::FileInputBitDepth::set(OpenColorIO::OpenColorIO_v2_4::BitDepth bitDepth)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::BitDepth)bitDepth;
    ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->setFileInputBitDepth(__arg0);
}

OpenColorIO::OpenColorIO_v2_4::BitDepth OpenColorIO::OpenColorIO_v2_4::RangeTransform::FileOutputBitDepth::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->getFileOutputBitDepth();
    return (OpenColorIO::OpenColorIO_v2_4::BitDepth)___ret;
}

void OpenColorIO::OpenColorIO_v2_4::RangeTransform::FileOutputBitDepth::set(OpenColorIO::OpenColorIO_v2_4::BitDepth bitDepth)
{
    auto __arg0 = (enum ::OpenColorIO_v2_4::BitDepth)bitDepth;
    ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->setFileOutputBitDepth(__arg0);
}

double OpenColorIO::OpenColorIO_v2_4::RangeTransform::MinInValue::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->getMinInValue();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::RangeTransform::MinInValue::set(double val)
{
    ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->setMinInValue(val);
}

bool OpenColorIO::OpenColorIO_v2_4::RangeTransform::HasMinInValue::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->hasMinInValue();
    return ___ret;
}

double OpenColorIO::OpenColorIO_v2_4::RangeTransform::MaxInValue::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->getMaxInValue();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::RangeTransform::MaxInValue::set(double val)
{
    ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->setMaxInValue(val);
}

bool OpenColorIO::OpenColorIO_v2_4::RangeTransform::HasMaxInValue::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->hasMaxInValue();
    return ___ret;
}

double OpenColorIO::OpenColorIO_v2_4::RangeTransform::MinOutValue::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->getMinOutValue();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::RangeTransform::MinOutValue::set(double val)
{
    ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->setMinOutValue(val);
}

bool OpenColorIO::OpenColorIO_v2_4::RangeTransform::HasMinOutValue::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->hasMinOutValue();
    return ___ret;
}

double OpenColorIO::OpenColorIO_v2_4::RangeTransform::MaxOutValue::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->getMaxOutValue();
    return ___ret;
}

void OpenColorIO::OpenColorIO_v2_4::RangeTransform::MaxOutValue::set(double val)
{
    ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->setMaxOutValue(val);
}

bool OpenColorIO::OpenColorIO_v2_4::RangeTransform::HasMaxOutValue::get()
{
    auto ___ret = ((class ::OpenColorIO_v2_4::RangeTransform*)NativePtr)->hasMaxOutValue();
    return ___ret;
}

